import sqlite3
import sys
import os
cur = os.getcwd()
sys.path.append(cur)
from INFO.common import tables
from INFO.common import columns
from logger.sqljlog import logger as sqljlog
from prettytable import PrettyTable

class Sqlite3DBMS:
    def __init__(self, database, tablename, column):
        self.database = database
        self.tablename = tablename
        self.conn = sqlite3.connect(database)
        self.cursor = self.conn.cursor()
        self.column = column
        self._table = PrettyTable()
        self._table.field_names = []

    def show_database_columns_info(self):
        try:
            self.cursor.execute(f"SELECT * FROM {self.tablename}")
            result = self.cursor.fetchall()
            for item in result:
                print(item)
                return item
        except sqlite3.OperationalError as exc:
            errmsg = str(exc)
            errmsg += "\n the above error message occurred while interacting with sqlite database."
            sqljlog.error(errmsg)

    def display_info_of_database(self):
        self._table.clear_rows()  # Clear existing rows in the table
        self.cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
        tables = self.cursor.fetchall()
        for table_name in tables:
            self.cursor.execute(f"SELECT * FROM {table_name[0]};")
            rows = self.cursor.fetchall()
            for row in rows:
                try:
                    self._table.add_row(row)
                except ValueError:
                    pass
                #todo : complete here

            print(f"Table name: {table_name[0]}")
            print(self._table)
            print()

obj = Sqlite3DBMS("your_database.db", "your_table", "gw")
obj.display_info_of_database()